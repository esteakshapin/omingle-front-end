{"ast":null,"code":"import _regeneratorRuntime from \"/home/esteakshapin/Documents/omingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/esteakshapin/Documents/omingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/esteakshapin/Documents/omingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/esteakshapin/Documents/omingle/src/pages/play/lobby/lobby.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Lobby() {\n  _s();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        players = _useState2[0],\n        setPlayers = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        opponents = _useState4[0],\n        setOpponents = _useState4[1];\n\n  const history = useHistory();\n\n  const processTeams = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(res) {\n      var team, resOpponent;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            team = res.data.team[0].users;\n            resOpponent = res.data.opponents[0].users;\n            _context.next = 4;\n            return getUser(team[0]);\n\n          case 4:\n            user = _context.sent;\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function processTeams(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const getUser = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var user;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios({\n              method: 'GET',\n              url: \"http://localhost:8000/users/\".concat(id, \"/\"),\n              headers: {\n                Authorization: \"JWT \".concat(localStorage.getItem('token'))\n              }\n            });\n\n          case 2:\n            user = _context2.sent;\n            return _context2.abrupt(\"return\", user);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function getUser(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: 'http://localhost:8000/team/get_team/',\n      headers: {\n        Authorization: \"JWT \".concat(localStorage.getItem('token'))\n      }\n    }).then(res => {\n      if (res.data.team.length > 0) {\n        processTeams(res);\n      } else if (!res.data.queryroom.players_waiting.includes(this.state.userId)) {\n        alert('You need to join the queue!');\n        history.push('/play/');\n      } else {\n        alert('You need to join the queue!');\n        history.push('/play/');\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Lobby Page\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Team\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), players.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.first_name\n    }, index + item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 43\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Lobby, \"MN2JlqJXYjF/LxvV2pHPpkv9/Sg=\", false, function () {\n  return [useHistory];\n});\n\n_c = Lobby;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lobby\");","map":{"version":3,"sources":["/home/esteakshapin/Documents/omingle/src/pages/play/lobby/lobby.jsx"],"names":["React","useEffect","useState","useHistory","axios","Lobby","players","setPlayers","opponents","setOpponents","history","processTeams","res","team","data","users","resOpponent","getUser","user","id","method","url","headers","Authorization","localStorage","getItem","then","length","queryroom","players_waiting","includes","state","userId","alert","push","map","item","index","first_name"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,oBAEEH,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,QAErBI,OAFqB;AAAA,QAEZC,UAFY;;AAAA,qBAGML,QAAQ,CAAC,EAAD,CAHd;AAAA;AAAA,QAGrBM,SAHqB;AAAA,QAGVC,YAHU;;AAI5B,QAAMC,OAAO,GAAGP,UAAU,EAA1B;;AAEA,QAAMQ,YAAY;AAAA,wEAAG,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AACXC,YAAAA,IADW,GACJD,GAAG,CAACE,IAAJ,CAASD,IAAT,CAAc,CAAd,EAAiBE,KADb;AAEXC,YAAAA,WAFW,GAEGJ,GAAG,CAACE,IAAJ,CAASN,SAAT,CAAmB,CAAnB,EAAsBO,KAFzB;AAAA;AAAA,mBAIJE,OAAO,CAACJ,IAAI,CAAC,CAAD,CAAL,CAJH;;AAAA;AAIjBK,YAAAA,IAJiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZP,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAiCA,QAAMM,OAAO;AAAA,yEAAG,kBAAOE,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACOf,KAAK,CAAC;AACrBgB,cAAAA,MAAM,EAAE,KADa;AAErBC,cAAAA,GAAG,wCAAiCF,EAAjC,MAFkB;AAGrBG,cAAAA,OAAO,EAAE;AACLC,gBAAAA,aAAa,gBAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAT;AADR;AAHY,aAAD,CADZ;;AAAA;AACNP,YAAAA,IADM;AAAA,8CAWLA,IAXK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPD,OAAO;AAAA;AAAA;AAAA,KAAb;;AAcAhB,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,KAAK,CAAC;AACFgB,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAE,sCAFH;AAGFC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,gBAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAT;AADR;AAHP,KAAD,CAAL,CAOGC,IAPH,CAOSd,GAAD,IAAS;AACb,UAAIA,GAAG,CAACE,IAAJ,CAASD,IAAT,CAAcc,MAAd,GAAuB,CAA3B,EAA8B;AAC1BhB,QAAAA,YAAY,CAACC,GAAD,CAAZ;AACH,OAFD,MAGK,IAAI,CAACA,GAAG,CAACE,IAAJ,CAASc,SAAT,CAAmBC,eAAnB,CAAmCC,QAAnC,CAA4C,KAAKC,KAAL,CAAWC,MAAvD,CAAL,EAAqE;AACtEC,QAAAA,KAAK,CAAC,6BAAD,CAAL;AACAvB,QAAAA,OAAO,CAACwB,IAAR,CAAa,QAAb;AACH,OAHI,MAIA;AACDD,QAAAA,KAAK,CAAC,6BAAD,CAAL;AACAvB,QAAAA,OAAO,CAACwB,IAAR,CAAa,QAAb;AACH;AACJ,KAnBD;AAoBH,GArBQ,EAqBN,EArBM,CAAT;AAuBA,sBACI;AAAA,0CAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAIK5B,OAAO,CAAC6B,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,kBAAiB;AAAA,gBAAuBD,IAAI,CAACE;AAA5B,OAAQD,KAAK,GAAGD,IAAhB;AAAA;AAAA;AAAA;AAAA,YAA7B,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GApFuB/B,K;UAIJF,U;;;KAJIE,K","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function Lobby() {\n\n    const [players, setPlayers] = useState([]);\n    const [opponents, setOpponents] = useState([]);\n    const history = useHistory();\n\n    const processTeams = async (res) => {\n        const team = res.data.team[0].users;\n        const resOpponent = res.data.opponents[0].users;\n\n        user = await getUser(team[0]);\n\n        // team.forEach(async (item) => {\n        //     user = await getUser(item);\n        //     console.log(user);\n        // })\n\n        // for (i in team) {\n        //     user = await getUser(i);\n        //     console.log(user);\n        // }\n\n        // for (i in resOpponent) {\n        //     user = await getUser(i);\n        //     console.log(user);\n        // }\n\n        // team.map(item => getUser(item).then((user) => setPlayers([...players, user.data])));\n        // resOpponent.map(item => getUser(item).then((user) => {\n        //     console.log('opponent')\n        //     console.log(opponents.concat(user.data));\n        //     setOpponents(opponents.concat(user.data));\n        //     console.log(opponents);\n        // }));\n\n        // console.log(players);\n        // console.log(opponents);\n    }\n\n    const getUser = async (id) => {\n        const user = await axios({\n            method: 'GET',\n            url: `http://localhost:8000/users/${id}/`,\n            headers: {\n                Authorization: `JWT ${localStorage.getItem('token')}`,\n\n            },\n        });\n        // console.log('getUser');\n        // console.log(user);\n        return user;\n    }\n\n    useEffect(() => {\n        axios({\n            method: 'GET',\n            url: 'http://localhost:8000/team/get_team/',\n            headers: {\n                Authorization: `JWT ${localStorage.getItem('token')}`,\n\n            },\n        }).then((res) => {\n            if (res.data.team.length > 0) {\n                processTeams(res);\n            }\n            else if (!res.data.queryroom.players_waiting.includes(this.state.userId)) {\n                alert('You need to join the queue!');\n                history.push('/play/')\n            }\n            else {\n                alert('You need to join the queue!');\n                history.push('/play/')\n            }\n        })\n    }, [])\n\n    return (\n        <div>\n            Lobby Page\n\n            <h1>Your Team</h1>\n            {players.map((item, index) => <p key={index + item}>{item.first_name}</p>)}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}