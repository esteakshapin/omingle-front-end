{"ast":null,"code":"import _regeneratorRuntime from \"/home/esteakshapin/Documents/omingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/esteakshapin/Documents/omingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/esteakshapin/Documents/omingle/src/pages/play/queue/queue.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Queue extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playersWaiting: 0,\n      intervalId: '',\n      userId: null\n    };\n  }\n\n  componentDidMount() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var intervalId;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            axios({\n              method: 'GET',\n              url: 'http://localhost:8000/rest-auth/user/',\n              headers: {\n                Authorization: \"JWT \".concat(localStorage.getItem('token'))\n              }\n            }).then(res => _this.setState({\n              userId: res.data.id\n            })).catch(error => console.log(error));\n\n            try {\n              intervalId = setInterval(() => {\n                axios({\n                  method: 'GET',\n                  url: 'http://localhost:8000/team/get_team/',\n                  headers: {\n                    Authorization: \"JWT \".concat(localStorage.getItem('token'))\n                  }\n                }).then(res => {\n                  if (!res.data.queryroom.players_waiting.includes(_this.state.userId)) {\n                    alert('You need to join the queue!');\n                  }\n\n                  console.log(res);\n                });\n              }, 3000);\n\n              _this.setState({\n                intervalId: intervalId\n              });\n            } catch (e) {\n              console.log('error');\n            }\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Queue Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Queue;","map":{"version":3,"sources":["/home/esteakshapin/Documents/omingle/src/pages/play/queue/queue.jsx"],"names":["React","axios","Queue","Component","constructor","props","state","playersWaiting","intervalId","userId","componentDidMount","method","url","headers","Authorization","localStorage","getItem","then","res","setState","data","id","catch","error","console","log","setInterval","queryroom","players_waiting","includes","alert","e","componentWillUnmount","clearInterval","render"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,CADP;AAETC,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb;AAKH;;AAEKC,EAAAA,iBAAiB,GAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBT,YAAAA,KAAK,CAAC;AACFU,cAAAA,MAAM,EAAE,KADN;AAEFC,cAAAA,GAAG,EAAE,uCAFH;AAGFC,cAAAA,OAAO,EAAE;AACLC,gBAAAA,aAAa,gBAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAT;AADR;AAHP,aAAD,CAAL,CAQKC,IARL,CAQWC,GAAD,IAAS,KAAI,CAACC,QAAL,CAAc;AAAEV,cAAAA,MAAM,EAAES,GAAG,CAACE,IAAJ,CAASC;AAAnB,aAAd,CARnB,EASKC,KATL,CASWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CATpB;;AAWA,gBAAI;AACIf,cAAAA,UADJ,GACiBkB,WAAW,CAAC,MAAM;AAC/BzB,gBAAAA,KAAK,CAAC;AACFU,kBAAAA,MAAM,EAAE,KADN;AAEFC,kBAAAA,GAAG,EAAE,sCAFH;AAGFC,kBAAAA,OAAO,EAAE;AACLC,oBAAAA,aAAa,gBAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAT;AADR;AAHP,iBAAD,CAAL,CAOGC,IAPH,CAOSC,GAAD,IAAS;AACb,sBAAI,CAACA,GAAG,CAACE,IAAJ,CAASO,SAAT,CAAmBC,eAAnB,CAAmCC,QAAnC,CAA4C,KAAI,CAACvB,KAAL,CAAWG,MAAvD,CAAL,EAAqE;AACjEqB,oBAAAA,KAAK,CAAC,6BAAD,CAAL;AACH;;AACDN,kBAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACH,iBAZD;AAaH,eAd2B,EAczB,IAdyB,CAD5B;;AAiBA,cAAA,KAAI,CAACC,QAAL,CAAc;AAAEX,gBAAAA,UAAU,EAAEA;AAAd,eAAd;AAEH,aAnBD,CAmBE,OAAOuB,CAAP,EAAU;AACRP,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AAjCqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCzB;;AAEDO,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAK3B,KAAL,CAAWE,UAAZ,CAAb;AACH;;AAED0B,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAxD+B;;AA2DpC,eAAehC,KAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nclass Queue extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            playersWaiting: 0,\n            intervalId: '',\n            userId: null\n        }\n    }\n\n    async componentDidMount() {\n        axios({\n            method: 'GET',\n            url: 'http://localhost:8000/rest-auth/user/',\n            headers: {\n                Authorization: `JWT ${localStorage.getItem('token')}`,\n\n            },\n        })\n            .then((res) => this.setState({ userId: res.data.id }))\n            .catch(error => console.log(error));\n\n        try {\n            let intervalId = setInterval(() => {\n                axios({\n                    method: 'GET',\n                    url: 'http://localhost:8000/team/get_team/',\n                    headers: {\n                        Authorization: `JWT ${localStorage.getItem('token')}`,\n\n                    },\n                }).then((res) => {\n                    if (!res.data.queryroom.players_waiting.includes(this.state.userId)) {\n                        alert('You need to join the queue!');\n                    }\n                    console.log(res)\n                })\n            }, 3000)\n\n            this.setState({ intervalId: intervalId });\n\n        } catch (e) {\n            console.log('error');\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.intervalId);\n    }\n\n    render() {\n        return (\n            <div>\n                Queue Page\n            </div>\n        )\n    }\n}\n\nexport default Queue;"]},"metadata":{},"sourceType":"module"}