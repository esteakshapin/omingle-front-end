{"ast":null,"code":"var _jsxFileName = \"/home/esteakshapin/Documents/omingle/src/pages/play/gameRoom/components/quizGrid.jsx\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useStyles = theme => ({\n  paper: {\n    minHeight: \"100%\",\n    height: \"22vh\"\n  },\n  quizGrid: {\n    margin: 0,\n    width: \"100%\",\n    height: \"100%\",\n    padding: \"10px\",\n    // backgroundColor: \"green\",\n    flexGrow: 1\n  },\n  videoChatGrid: {\n    height: \"calc(37.5% - \".concat(theme.spacing(2.5) * 2 / 3, \"px)\")\n  },\n  middleCard: {\n    height: \"calc(25% - \".concat(theme.spacing(2.5) * 2 / 3, \"px)\"),\n    marginTop: theme.spacing(2.5),\n    marginBottom: theme.spacing(2.5)\n  }\n});\n\nclass QuizGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      remoteParticipants: Array.from(this.props.videoRoom.participants.values())\n    };\n    this.leaveRoom = this.leaveRoom.bind(this);\n  }\n\n  removeParticipant(participant) {\n    console.log(\"\".concat(participant.identity, \" has left the room\"));\n    this.setState({\n      remoteParticipants: this.state.remoteParticipants.filter(p => p.identity !== participant.identity)\n    });\n  }\n\n  addParticipant(participant) {\n    console.log(\"\".concat(participant.identity, \" has joined the room.\"));\n    this.setState({\n      remoteParticipants: [...this.state.remoteParticipants, participant]\n    });\n  }\n\n  leaveRoom() {\n    this.props.room.disconnect(); // this.props.returnToLobby();\n  }\n\n  componentDidMount() {\n    // Add event listeners for future remote participants coming or going\n    this.props.room.on('participantConnected', participant => this.addParticipant(participant));\n    this.props.room.on('participantDisconnected', participant => this.removeParticipant(participant));\n    window.addEventListener(\"beforeunload\", this.leaveRoom);\n  }\n\n  componentWillUnmount() {\n    this.leaveRoom();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.quizGrid,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        sm: 6,\n        md: 6,\n        lg: 6,\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          variant: \"outlined\",\n          className: classes.videoChatGrid,\n          children: \"Other Person Video chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"\".concat(classes.middleCard),\n          children: \"Score Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 0,\n          variant: \"outlined\",\n          className: classes.videoChatGrid,\n          children: \"User Video Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        sm: 6,\n        md: 6,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          variant: \"outlined\",\n          square: true,\n          elevation: 0,\n          className: classes.paper,\n          children: \"Quiz section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withStyles(useStyles)(QuizGrid);","map":{"version":3,"sources":["/home/esteakshapin/Documents/omingle/src/pages/play/gameRoom/components/quizGrid.jsx"],"names":["React","Grid","Paper","withStyles","useStyles","theme","paper","minHeight","height","quizGrid","margin","width","padding","flexGrow","videoChatGrid","spacing","middleCard","marginTop","marginBottom","QuizGrid","Component","constructor","props","state","remoteParticipants","Array","from","videoRoom","participants","values","leaveRoom","bind","removeParticipant","participant","console","log","identity","setState","filter","p","addParticipant","room","disconnect","componentDidMount","on","window","addEventListener","componentWillUnmount","render","classes"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = ((theme) => ({\r\n  paper: {\r\n    minHeight: \"100%\",\r\n    height: \"22vh\"\r\n  },\r\n  quizGrid: {\r\n    margin: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    padding: \"10px\",\r\n    // backgroundColor: \"green\",\r\n    flexGrow: 1\r\n  },\r\n  videoChatGrid: {\r\n    height: `calc(37.5% - ${(theme.spacing(2.5) * 2) / 3}px)`\r\n  },\r\n  middleCard: {\r\n    height: `calc(25% - ${(theme.spacing(2.5) * 2) / 3}px)`,\r\n    marginTop: theme.spacing(2.5),\r\n    marginBottom: theme.spacing(2.5)\r\n  }\r\n}));\r\n\r\n\r\nclass QuizGrid extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      remoteParticipants: Array.from(this.props.videoRoom.participants.values())\r\n    }\r\n\r\n    this.leaveRoom = this.leaveRoom.bind(this);\r\n  }\r\n\r\n  removeParticipant(participant) {\r\n    console.log(`${participant.identity} has left the room`);\r\n\r\n    this.setState({\r\n      remoteParticipants: this.state.remoteParticipants.filter(p => p.identity !== participant.identity)\r\n    });\r\n  }\r\n\r\n  addParticipant(participant) {\r\n    console.log(`${participant.identity} has joined the room.`);\r\n\r\n    this.setState({\r\n      remoteParticipants: [...this.state.remoteParticipants, participant]\r\n    });\r\n  }\r\n\r\n  leaveRoom() {\r\n    this.props.room.disconnect();\r\n    // this.props.returnToLobby();\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Add event listeners for future remote participants coming or going\r\n    this.props.room.on('participantConnected', participant => this.addParticipant(participant));\r\n    this.props.room.on('participantDisconnected', participant => this.removeParticipant(participant));\r\n\r\n    window.addEventListener(\"beforeunload\", this.leaveRoom);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.leaveRoom();\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Grid container spacing={2} className={classes.quizGrid}>\r\n        <Grid item xs={6} sm={6} md={6} lg={6}>\r\n          <Paper\r\n            elevation={0}\r\n            variant=\"outlined\"\r\n            className={classes.videoChatGrid}\r\n          >\r\n            Other Person Video chat\r\n          </Paper>\r\n          <Paper className={`${classes.middleCard}`}>Score Board</Paper>\r\n          <Paper\r\n            elevation={0}\r\n            variant=\"outlined\"\r\n            className={classes.videoChatGrid}\r\n          >\r\n            User Video Chat\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6} sm={6} md={6} lg={6}>\r\n          <Paper\r\n            variant=\"outlined\"\r\n            square\r\n            elevation={0}\r\n            className={classes.paper}\r\n          >\r\n            Quiz section\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(QuizGrid);"]},"metadata":{},"sourceType":"module"}