{"ast":null,"code":"var _jsxFileName = \"/Users/ethanshan/PycharmProjects/omingle-front-end/src/pages/play/gameRoom/components/Participant.js\";\nimport React, { Component } from 'react';\nimport Track from './Track';\nimport { makeStyles } from '@material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Participant extends Component {\n  constructor(props) {\n    super(props);\n    const existingPublications = Array.from(this.props.participant.tracks.values());\n    const existingTracks = existingPublications.map(publication => publication.track);\n    const nonNullTracks = existingTracks.filter(track => track !== null);\n    this.state = {\n      tracks: nonNullTracks\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.localParticipant) {\n      this.props.participant.on('trackSubscribed', track => this.addTrack(track));\n    }\n  }\n\n  addTrack(track) {\n    this.setState({\n      tracks: [...this.state.tracks, track]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"participant\",\n      id: this.props.participant.identity,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"identity\",\n        children: this.props.participant.identity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), this.state.tracks.map(track => /*#__PURE__*/_jsxDEV(Track, {\n        filter: this.state.filter,\n        track: track\n      }, track, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Participant;","map":{"version":3,"sources":["/Users/ethanshan/PycharmProjects/omingle-front-end/src/pages/play/gameRoom/components/Participant.js"],"names":["React","Component","Track","makeStyles","Participant","constructor","props","existingPublications","Array","from","participant","tracks","values","existingTracks","map","publication","track","nonNullTracks","filter","state","componentDidMount","localParticipant","on","addTrack","setState","render","identity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,UAAT,QAA2B,WAA3B;;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAChCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,UAAMC,oBAAoB,GAAGC,KAAK,CAACC,IAAN,CAAW,KAAKH,KAAL,CAAWI,WAAX,CAAuBC,MAAvB,CAA8BC,MAA9B,EAAX,CAA7B;AACA,UAAMC,cAAc,GAAGN,oBAAoB,CAACO,GAArB,CAAyBC,WAAW,IAAIA,WAAW,CAACC,KAApD,CAAvB;AACA,UAAMC,aAAa,GAAGJ,cAAc,CAACK,MAAf,CAAsBF,KAAK,IAAIA,KAAK,KAAK,IAAzC,CAAtB;AAEA,SAAKG,KAAL,GAAa;AACTR,MAAAA,MAAM,EAAEM;AADC,KAAb;AAGH;;AAEDG,EAAAA,iBAAiB,GAAG;AAChB,QAAI,CAAC,KAAKd,KAAL,CAAWe,gBAAhB,EAAkC;AAC9B,WAAKf,KAAL,CAAWI,WAAX,CAAuBY,EAAvB,CAA0B,iBAA1B,EAA6CN,KAAK,IAAI,KAAKO,QAAL,CAAcP,KAAd,CAAtD;AACH;AACJ;;AAEDO,EAAAA,QAAQ,CAACP,KAAD,EAAQ;AACZ,SAAKQ,QAAL,CAAc;AACVb,MAAAA,MAAM,EAAE,CAAC,GAAG,KAAKQ,KAAL,CAAWR,MAAf,EAAuBK,KAAvB;AADE,KAAd;AAGH;;AAEDS,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,EAAE,EAAE,KAAKnB,KAAL,CAAWI,WAAX,CAAuBgB,QAAxD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBAA2B,KAAKpB,KAAL,CAAWI,WAAX,CAAuBgB;AAAlD;AAAA;AAAA;AAAA;AAAA,cADJ,EAGQ,KAAKP,KAAL,CAAWR,MAAX,CAAkBG,GAAlB,CAAsBE,KAAK,iBACvB,QAAC,KAAD;AAAmB,QAAA,MAAM,EAAE,KAAKG,KAAL,CAAWD,MAAtC;AAA8C,QAAA,KAAK,EAAEF;AAArD,SAAYA,KAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAnC+B;;AAsCpC,eAAeZ,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport Track from './Track';\nimport { makeStyles } from '@material'\n\nclass Participant extends Component {\n    constructor(props) {\n        super(props);\n\n        const existingPublications = Array.from(this.props.participant.tracks.values());\n        const existingTracks = existingPublications.map(publication => publication.track);\n        const nonNullTracks = existingTracks.filter(track => track !== null)\n\n        this.state = {\n            tracks: nonNullTracks\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.localParticipant) {\n            this.props.participant.on('trackSubscribed', track => this.addTrack(track));\n        }\n    }\n\n    addTrack(track) {\n        this.setState({\n            tracks: [...this.state.tracks, track]\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"participant\" id={this.props.participant.identity}>\n                <div className=\"identity\">{this.props.participant.identity}</div>\n                {\n                    this.state.tracks.map(track =>\n                        <Track key={track} filter={this.state.filter} track={track} />)\n                }\n            </div>\n        );\n    }\n}\n\nexport default Participant;\n"]},"metadata":{},"sourceType":"module"}