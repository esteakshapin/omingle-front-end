{"ast":null,"code":"import _slicedToArray from \"/home/esteakshapin/Documents/omingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/esteakshapin/Documents/omingle/src/components/navbar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { AppBar, Toolbar, makeStyles, List, ListItem, ListItemText, Button } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport logo from \"../assets/images/logo_transparent.png\";\nimport GoogleSocialAuth from '../googleAuth/GoogleSocialAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  navbarDisplayFlex: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  navDisplayFlex: {\n    display: \"flex\",\n    justifyContent: \"space-between\" // backgroundColor: 'green'\n\n  },\n  linkText: {\n    textDecoration: \"none\",\n    color: \"black\",\n    opacity: 0.6\n  },\n  nav: {\n    backgroundColor: \"white\"\n  },\n  buttonColor: {\n    backgroundColor: \"#F6E2E0\",\n    color: \"#F79489\"\n  }\n});\nconst navLinks = [{\n  title: \"Dashboard\",\n  path: \"/\",\n  active: false\n}, {\n  title: \"Play\",\n  path: \"/\",\n  active: true\n}, {\n  title: \"Friends\",\n  path: \"/\",\n  active: false\n}, {\n  title: \"School\",\n  path: \"/\",\n  active: false\n}];\n\nconst Header = () => {\n  _s();\n\n  const classes = useStyles(); // Declare a new state variable, which we'll call \"count\"\n\n  const _useState = useState(localStorage.getItem('token') ? true : false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoggedIn = _useState2[0],\n        setLoggedIn = _useState2[1];\n\n  const _useState3 = useState(localStorage.getItem('firstName')),\n        _useState4 = _slicedToArray(_useState3, 2),\n        firstName = _useState4[0],\n        setFirstName = _useState4[1];\n\n  const _useState5 = useState(localStorage.getItem('lastName')),\n        _useState6 = _slicedToArray(_useState5, 2),\n        lastName = _useState6[0],\n        setLastName = _useState6[1];\n\n  const logIn = useCallback(res => {\n    // console.log(res.json());\n    console.log(res.data.token);\n    console.log(res.data.user);\n    localStorage.setItem('token', res.data.token);\n    localStorage.setItem('firstName', res.data.user.first_name);\n    localStorage.setItem('lastName', res.data.user.last_name);\n    setFirstName(localStorage.getItem('firstName'));\n    setLastName(localStorage.getItem('lastName'));\n    setLoggedIn(True);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    className: classes.nav,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.navbarDisplayFlex,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\" // backgroundColor: \"blue\"\n\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(Avatar, {\n          src: logo,\n          variant: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          component: \"nav\",\n          \"aria-labelledby\": \"main navigation\",\n          className: classes.navDisplayFlex,\n          children: navLinks.map(({\n            title,\n            path,\n            active\n          }) => /*#__PURE__*/_jsxDEV(\"a\", {\n            href: path,\n            className: classes.linkText,\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              classes: active ? {\n                button: classes.buttonColor\n              } : {},\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)\n          }, title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(Avatar, {\n        children: firstName.charAt(0) + lastName.charAt(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(GoogleSocialAuth, {\n        logIn: logIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 85\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"/SlkJ4/30Iuijr/saXHD/UBfdlQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/esteakshapin/Documents/omingle/src/components/navbar.jsx"],"names":["React","useState","useCallback","AppBar","Toolbar","makeStyles","List","ListItem","ListItemText","Button","Avatar","logo","GoogleSocialAuth","useStyles","navbarDisplayFlex","display","justifyContent","navDisplayFlex","linkText","textDecoration","color","opacity","nav","backgroundColor","buttonColor","navLinks","title","path","active","Header","classes","localStorage","getItem","isLoggedIn","setLoggedIn","firstName","setFirstName","lastName","setLastName","logIn","res","console","log","data","token","user","setItem","first_name","last_name","True","alignItems","map","button","charAt"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  makeStyles,\n  List,\n  ListItem,\n  ListItemText,\n  Button\n} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport logo from \"../assets/images/logo_transparent.png\";\nimport GoogleSocialAuth from '../googleAuth/GoogleSocialAuth';\n\nconst useStyles = makeStyles({\n  navbarDisplayFlex: {\n    display: `flex`,\n    justifyContent: `space-between`\n  },\n  navDisplayFlex: {\n    display: `flex`,\n    justifyContent: `space-between`\n    // backgroundColor: 'green'\n  },\n  linkText: {\n    textDecoration: `none`,\n    color: `black`,\n    opacity: 0.6\n  },\n  nav: {\n    backgroundColor: \"white\"\n  },\n  buttonColor: {\n    backgroundColor: \"#F6E2E0\",\n    color: \"#F79489\"\n  }\n});\n\nconst navLinks = [\n  { title: \"Dashboard\", path: \"/\", active: false },\n  { title: \"Play\", path: \"/\", active: true },\n  { title: \"Friends\", path: \"/\", active: false },\n  { title: \"School\", path: \"/\", active: false }\n];\n\nconst Header = () => {\n  const classes = useStyles();\n\n  // Declare a new state variable, which we'll call \"count\"\n  const [isLoggedIn, setLoggedIn] = useState(localStorage.getItem('token') ? true : false);\n  const [firstName, setFirstName] = useState(localStorage.getItem('firstName'));\n  const [lastName, setLastName] = useState(localStorage.getItem('lastName'));\n\n  const logIn = useCallback(\n    (res) => {\n      // console.log(res.json());\n      console.log(res.data.token);\n      console.log(res.data.user);\n      localStorage.setItem('token', res.data.token);\n      localStorage.setItem('firstName', res.data.user.first_name);\n      localStorage.setItem('lastName', res.data.user.last_name);\n      setFirstName(localStorage.getItem('firstName'));\n      setLastName(localStorage.getItem('lastName'));\n      setLoggedIn(True);\n    }, []\n  )\n\n  return (\n    <AppBar position=\"static\" className={classes.nav}>\n      <Toolbar className={classes.navbarDisplayFlex}>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\"\n            // backgroundColor: \"blue\"\n          }}\n        >\n          {\" \"}\n          <Avatar src={logo} variant=\"square\" />\n          <List\n            component=\"nav\"\n            aria-labelledby=\"main navigation\"\n            className={classes.navDisplayFlex}\n          >\n            {navLinks.map(({ title, path, active }) => (\n              <a href={path} key={title} className={classes.linkText}>\n                <ListItem\n                  button\n                  classes={active ? { button: classes.buttonColor } : {}}\n                >\n                  <ListItemText primary={title} />\n                </ListItem>\n              </a>\n            ))}\n          </List>{\" \"}\n        </div>\n\n        {isLoggedIn ? <Avatar>{firstName.charAt(0) + lastName.charAt(0)}</Avatar> : <GoogleSocialAuth logIn={logIn} />}\n\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}